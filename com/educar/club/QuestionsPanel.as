package com.educar.club {		import flash.display.Sprite;	import com.educar.game.GameButton;	import flash.events.MouseEvent;	import com.greensock.TweenLite;	import com.greensock.easing.Back;	import flash.display.MovieClip;	import flash.events.Event;	import com.educar.game.GameEvent;	import flash.display.DisplayObjectContainer;	import com.greensock.TimelineLite;	import com.educar.game.ResultScreen;	import com.educar.game.ResultScreenOk;	import com.educar.game.ResultScreenError;	import com.greensock.plugins.TweenPlugin;	import com.greensock.plugins.ColorTransformPlugin;	import com.greensock.plugins.GlowFilterPlugin;		public class QuestionsPanel extends MovieClip {				//from FLA		public var btnNext:GameButton;		public var btnSolution:GameButton;		public var mcTitle:MovieClip;		public var mcAnswerA:AnswerButton;		public var mcAnswerB:AnswerButton;		public var mcAnswerC:AnswerButton;				//private		private var frameAnimation:TimelineLite;		public function QuestionsPanel() {			trace('new QuestionsPanel');			this.addEventListener( Event.ADDED_TO_STAGE, init, false, 0, true );		}				private function init(e:Event):void {			stop();						btnNext.addEventListener(MouseEvent.CLICK, nextSlide );			btnSolution.addEventListener(MouseEvent.CLICK, revealAnswer);						updateFrame();		}				private function nextSlide(e:Event=null):void {			if( this.currentFrame == this.totalFrames ){				closePanel();				return;			}			this.nextFrame();			updateFrame();		}				private function updateFrame(){			btnNext.visible = false;			// trace( mcTitle, mcAnswerA, mcAnswerB, mcAnswerC ); return;			mcAnswerA.mouseEnabled = mcAnswerB.mouseEnabled = mcAnswerC.mouseEnabled = false;			this.frameAnimation = new TimelineLite({onComplete: enableInterface});			this.frameAnimation							.from(mcTitle, 0.5, { alpha: 0, y: '-20', ease: Back.easeOut } )							.from( mcAnswerA, 1, { alpha: 0, y: '-10', x: '-20', ease: Back.easeInOut } )							.from( mcAnswerB, 1, { alpha: 0, y: '-10',  x: '+20', ease: Back.easeInOut }, '-=0.8' )							.from( mcAnswerC, 1, { alpha: 0, y: '-10',  x: '-20', ease: Back.easeInOut }, '-=0.8' );						mcAnswerA.addEventListener(MouseEvent.CLICK, checkAnswer, false, 0, true );			mcAnswerB.addEventListener(MouseEvent.CLICK, checkAnswer, false, 0, true );			mcAnswerC.addEventListener(MouseEvent.CLICK, checkAnswer, false, 0, true );		}		private function enableInterface():void {			mcAnswerA.mouseEnabled = mcAnswerB.mouseEnabled = mcAnswerC.mouseEnabled = true;		}		private function checkAnswer(e:Event):void {						var ok:Boolean = Solutions.checkAnswer( this.currentFrame-1, AnswerButton(e.target).getOption() );			var panel:ResultScreen = ok ? new ResultScreenOk() : new ResultScreenError();			panel.addEventListener( Event.REMOVED_FROM_STAGE, doNext, false, 0, true );			stage.addChild( panel );		}				private function doNext( e:Event ):void {			if( e.target is ResultScreenOk ) this.nextSlide();			else this.revealAnswer();		}				private function revealAnswer(e:Event=null):void {			var option:String = Solutions.getAnswer( this.currentFrame - 1 );			var answer:AnswerButton = this.getChildByName( "mcAnswer"+option ) as AnswerButton;			if( answer != mcAnswerA ) mcAnswerA.setWrong();			if( answer != mcAnswerB ) mcAnswerB.setWrong();			if( answer != mcAnswerC ) mcAnswerC.setWrong();			answer.setOk();						btnNext.visible = true;			TweenLite.from( btnNext, 1, { alpha: 0, x: '+20', ease: Back.easeOut, delay: 1.5 } );		}				private function closePanel(){			btnNext.mouseChildren = btnNext.mouseEnabled = false;			TweenLite.to( btnNext, 1, { alpha: 0, x: '+20', ease: Back.easeOut, delay: 0.5 } );			//saco a los guachos!			TweenLite.delayedCall(2, closePanelEnd );		}				private function closePanelEnd(){			this.dispatchEvent( new GameEvent( GameEvent.GAME_WIN ) );			this.parent.removeChild( this );		}	}		}