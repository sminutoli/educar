package com.educar.game {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import com.greensock.TimelineLite;	import com.greensock.TweenLite;		public class ResultScreen extends Sprite {				private var back:Sprite;		protected var face:Sprite;		protected var text:Sprite;		protected var close:GameButton;		protected var timeline:TimelineLite;				public function ResultScreen() {			// constructor code			this.addEventListener(Event.ADDED_TO_STAGE, init );					}				protected function createInterface():void {			//inherit			throw new Error('ResultScreen has to be extended');		}				protected function createTimeline():void {			this.timeline = new TimelineLite({ onReverseComplete: this.destroyScreen });			this.timeline				.from( this.back, 0.5, { alpha: 0 } )				.from( this.face, 1, { alpha: 0, rotation: -360*4 } )				.from( this.text, 1, { alpha: 0, x: '-50' }, '+=0.2' )				.to( this.face, 0.5, { x: '-30' }, '-=1.0' )				.from( this.close, 1, { alpha: 0, y: '-20' } );		}				private function init(e:Event):void {			this.back = new Sprite();			this.back.graphics.beginFill(0, 0.8);			this.back.graphics.drawRect( 0, 0, this.stage.stageWidth, this.stage.stageHeight );			this.addChild( this.back );						this.createInterface();						this.face.x = this.back.x + this.back.width /2;			this.face.y = this.back.y + this.back.height /2;			this.text.x = this.face.x + this.text.width / 2;			this.text.y = this.face.y;						this.close.x = this.back.x + this.back.width - this.close.width;			this.close.y = this.back.y + this.close.height;						this.back.buttonMode = this.back.useHandCursor = true;			this.back.addEventListener(MouseEvent.CLICK, closeScreen, false, 0, true );			this.close.addEventListener(MouseEvent.CLICK, closeScreen, false, 0, true );						this.createTimeline();		}				private function closeScreen( e:MouseEvent ):void {			//this.destroyScreen();			this.timeline.reverse();		}				private function destroyScreen( e:Event=null ) :void {			this.parent.removeChild( this );		}	}	}