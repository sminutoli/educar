package com.educar.game {	import flash.display.MovieClip;	import flash.events.Event;	import flash.display.Sprite;	import com.util.HTMLColors;	import com.greensock.TweenLite;	import flash.ui.Mouse;	import com.educar.game.GameEvent;		public class Game extends MovieClip {				public static const GAME_REPLAY:String = 'educar_game_replay';		public static const GAME_HINTS:String = 'educar_game_hints';				private var gameBlock:Sprite;		protected var gameStarted:Boolean;				public function Game() {			//trace('new Game');			this.addEventListener( Event.ADDED_TO_STAGE, init );			this.addEventListener( Event.REMOVED_FROM_STAGE, dispose );		}				protected function dispose( e:Event ):void {			this.stage.removeEventListener( GameEvent.GAME_SHOW_RULES, showRules );			this.stage.removeEventListener( GameEvent.GAME_START, hidePanel );			this.stage.removeEventListener( GameEvent.GAME_START, this.createButtons );		}				protected function init( e:Event ):void {			this.removeEventListener( Event.ADDED_TO_STAGE, init );						//trace('Game init');			this.createBlocking();			this.bindEvents();			this.dispatchEvent( new GameEvent( GameEvent.GAME_SHOW_RULES ) );		}				protected function showRules(e:Event):void {			this.gameBlock.mouseEnabled = true;			this.gameBlock.height = 50;			this.gameBlock.alpha = 0;			TweenLite.to( this.gameBlock, 0.5, { alpha: 1, height: this.stage.stageHeight } );			//inherits purpouses		}				protected function createButtons(e:GameEvent=null):void {			//inherits purpouses		}				protected function createBlocking():void {			this.gameBlock = new Sprite();			this.gameBlock.graphics.beginFill( HTMLColors.white );			this.gameBlock.graphics.drawRect( 0, 0, this.stage.stageWidth, this.stage.stageHeight );			this.gameBlock.alpha = 0;			this.gameBlock.mouseEnabled = false;			this.addChildAt( this.gameBlock, 0 );		}				protected function bindEvents():void {			//trace('Game bindEvents');			this.stage.addEventListener( GameEvent.GAME_SHOW_RULES, showRules, false, 0, true );			this.stage.addEventListener( GameEvent.GAME_START, trackStarted, false, 0, true );			this.stage.addEventListener( GameEvent.GAME_START, hidePanel, false, 0, true );			this.stage.addEventListener( GameEvent.GAME_START, this.createButtons, false, 0, true );			//inherits purpouses		}				protected function trackStarted(e:Event):void {			this.stage.removeEventListener( GameEvent.GAME_START, trackStarted );			this.gameStarted = true;		}				protected function blockScreen(e:Event):void {			Mouse.hide();			this.mouseEnabled = false;			this.mouseChildren = false;		}		protected function releaseScreen(e:Event):void {			Mouse.show();			this.mouseEnabled = true;			this.mouseChildren = true;		}				protected function showPanel(e:Event):void {						this.gameBlock.mouseEnabled = true;			this.gameBlock.height = 50;			this.gameBlock.alpha = 0;			TweenLite.to( this.gameBlock, 0.5, { alpha: 1, height: this.stage.stageHeight } );			//inherits purpouses					}		protected function hidePanel(e:Event):void {						this.gameBlock.mouseEnabled = false;			TweenLite.to( this.gameBlock, 0.5, { alpha: 0, height: 50 } );					}			}	}