package com.educar.sopa {	import flash.display.Shape;	import flash.geom.Point;	import flash.geom.Rectangle;	import flash.display.DisplayObject;	import flash.display.BlendMode;	import com.util.HTMLColors;		public class GridSelection {		public function GridSelection() {			// constructor code		}				public static function drawSelection( begin:Letter, end:Letter, context:DisplayObject ):Shape {						var loc1:Point = begin.getPos();			var loc2:Point = end.getPos();						var bounds1:Rectangle = begin.getBounds( context );			var bounds2:Rectangle = end.getBounds( context );						//chequeo que sea válida la selección			//básicamente no se permiten diagonales			var isValid:Boolean = loc2.x == loc1.x || loc2.y == loc1.y;						//sino es valido, mantengo los limites de la celda inicial			if( !isValid ){				bounds2 = bounds1;			}						var drawingRect:Rectangle = new Rectangle();			drawingRect.x = Math.min( bounds1.left, bounds2.left );			drawingRect.y = Math.min( bounds1.top, bounds2.top );			drawingRect.width = Math.max( bounds1.right, bounds2.right ) - drawingRect.x;			drawingRect.height = Math.max( bounds1.bottom, bounds2.bottom ) - drawingRect.y;									var result:Shape = new Shape();			//result.graphics.lineStyle( 3, HTMLColors.crimson );			result.graphics.beginFill( AppColors.GRID_SELECTED );			result.graphics.drawRect( drawingRect.x, drawingRect.y, drawingRect.width, drawingRect.height );			result.blendMode = BlendMode.MULTIPLY;						return result;					}	}	}