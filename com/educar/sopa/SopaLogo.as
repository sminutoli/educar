package com.educar.sopa {		import flash.display.Sprite;	import flash.display.DisplayObject;	import com.greensock.TweenLite;	import com.greensock.easing.Strong;	import com.greensock.easing.Elastic;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.events.Event;	import flash.display.Stage;		public class SopaLogo extends Sprite {				private var animations:Array;		private var animationDelay:Timer;				public function SopaLogo() {			// constructor code			for( var i:uint=0; i < this.numChildren; i++ ){				this.getChildAt(i).visible = false;			}			this.addEventListener(Event.ADDED_TO_STAGE, init, false, 0, true );		}				private function init( e:Event ):void {			this.removeEventListener(Event.ADDED_TO_STAGE, init );			this.stage.addEventListener( GridEvent.SOLUTION_OK, do_move );			this.show();		}				public function show():void {			this.animations = new Array();			for( var i:uint=0; i < this.numChildren; i++ ){				var child:DisplayObject = this.getChildAt(i);				child.visible = true;				var nY:Number = child.y - (100+Math.random()*100);				var nRot:Number = Math.random()*720;				var nDelay:Number = (Math.random()*500) / 1000;				this.animations[i] = TweenLite.from( child, (2000+Math.random()*500) /1000, { 												scaleX: 1.5, scaleY: 1.5, alpha: 0, y: nY, rotation: nRot, 												delay: nDelay, ease: Elastic.easeOut  } );			}			this.animationDelay = new Timer( 0 );			this.animationDelay.delay = 20000+Math.random()*10000;			this.animationDelay.addEventListener(TimerEvent.TIMER, do_move, false, 0, true );			this.animationDelay.start();		}				public function hide():void {			var animation:TweenLite;			for( var i:uint=0; animation = this.animations[i]; i++){				animation.reverse();			};		}				public function do_move( e:Event  ):void {			this.animationDelay.delay = 20000+Math.random()*10000;			var animation:TweenLite;			for( var i:uint=0; animation = this.animations[i]; i++){				animation.seek( animation.duration()*0.5 );			}; 		}	}	}