package com.educar.sopa2 {	import flash.display.MovieClip;	import flash.events.Event;	import flash.display.Sprite;	import com.util.HTMLColors;	import com.greensock.TweenLite;	import flash.ui.Mouse;	import com.educar.game.GameEvent;	import com.educar.game.Game;	import com.educar.sopa2.NavAnswer;	import com.educar.sopa.SopaBtn;	import com.educar.sopa.BtnReplay;	import com.educar.sopa.BtnHints;	import com.educar.sopa.RulesPanel;	import com.educar.sopa.GridEvent;	import com.greensock.easing.Back;		public class Main extends Game {				private var navAnswer:NavAnswer;		private var gridLetters:GridLetters2;		private var gameBlock:Sprite;		private var btnHints:SopaBtn;		private var btnReplay:SopaBtn;				override protected function showRules(e:Event):void {			super.showRules(e);			var panel:Sprite = new RulesPanel();			this.addChildAt( panel, 2 );		}				override protected function createButtons(e:GameEvent=null):void {						this.gridLetters = new GridLetters2();			this.gridLetters.x = 150;			this.gridLetters.y = 25;			this.gridLetters.scaleX = this.gridLetters.scaleY = 0.85;			this.addChildAt( this.gridLetters, 1 );						var adjetivos = new Adjetivos();			adjetivos.x = 520;			adjetivos.y = 30;			this.addChildAt( adjetivos, 2);			TweenLite.from( adjetivos, 0.8, { alpha: 0, y: '-10', ease: Back.easeOut } );						this.navAnswer = new NavAnswer();			this.navAnswer.x = adjetivos.x;			this.navAnswer.y = adjetivos.y + adjetivos.height + 20;									this.addChildAt( this.navAnswer, 3 );						this.btnHints = new BtnHints();			this.btnHints.x = 70;			this.btnHints.y = 200;			this.addChildAt( this.btnHints, 4 );			TweenLite.delayedCall( 4, this.btnHints.setEnabled, [ true ] );						this.btnReplay = new BtnReplay();			this.btnReplay.x = this.btnHints.x;			this.btnReplay.y = this.btnHints.y;			this.addChildAt( this.btnReplay, 4 );			this.btnReplay.visible = false;		}				override protected function bindEvents():void {			super.bindEvents();			this.stage.addEventListener( GridEvent.GRID_COMPLETE, gridComplete, false, 0, true );			//this.stage.addEventListener( GridEvent.SHOW_SOLUTION, blockScreen, false, 0, true );			//this.stage.addEventListener( GridEvent.SHOW_SOLUTION_END, releaseScreen, false, 0, true );		}				private function gridComplete(e:Event):void {			this.stage.removeEventListener( GridEvent.GRID_COMPLETE, gridComplete );			this.btnReplay.visible = true;			TweenLite.from( this.btnReplay, 1, { alpha: 0 } );		}			}	}