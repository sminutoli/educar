package com.educar.espaciotiempo {		import flash.display.MovieClip;	import com.educar.game.Game;	import flash.events.Event;	import com.educar.game.GameEvent;	import flash.display.Sprite;	import com.educar.game.ResultScreenOk;	import com.educar.game.ResultScreen;	import com.educar.game.ResultScreenError;	import com.educar.game.GameButton;	import flash.events.MouseEvent;	import com.greensock.TweenLite;	import com.greensock.easing.Back;			public class Main extends Game {				//FLA vars		public var mcFrame:Sprite;		public var mcOK:Sprite;		public var btnReplay:GameButton;				private var options:EspacioOptions;				//Class vars		private static var instance:Main;						public static function getInstance():Main {			return Main.instance;		}				public function Main(){			super();			if( Main.instance ) throw new Error('Main is a singleton');			Main.instance = this;			this.removeChild( mcOK );			this.removeChild( btnReplay );		}				//remove behaviour inherited		override protected function createBlocking():void {}		override protected function showPanel(e:Event):void {}		override protected function hidePanel(e:Event):void {}		override protected function bindEvents():void {			super.bindEvents();			this.stage.addEventListener( GameEvent.GAME_WIN, showEnd, false, 0, true );			this.stage.addEventListener( GameEvent.GAME_OVER, showEnd, false, 0, true );			this.btnReplay.setClickEvent( new GameEvent( GameEvent.GAME_REPLAY ) );		}				private function showEnd(e:Event):void {			var panel:Sprite;			if( e.type == GameEvent.GAME_WIN ) panel = new ResultScreenOk();			else panel = new ResultScreenError();			stage.addChild( panel );			panel.addEventListener( Event.REMOVED_FROM_STAGE, showEndComplete );		}				private function showEndComplete(e:Event):void {			if( e.target is ResultScreenOk ){				this.addChild( mcOK );				TweenLite.from( mcOK, 0.8, { y: '-20', alpha: 0, ease: Back.easeOut } );				this.options.orderByValue();				return;			}			this.addChild( btnReplay );			TweenLite.from( btnReplay, 0.8, { y: '-20', alpha: 0, ease: Back.easeOut } );		}				override protected function showRules(e:Event):void {			var panel:RulesPanel = new RulesPanel();			stage.addChild( panel );		}				override protected function createButtons(e:GameEvent=null):void {			trace('Main createButtons');			this.options = new EspacioOptions();			stage.addChild( options );		}			}	}