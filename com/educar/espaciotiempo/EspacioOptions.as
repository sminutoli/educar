package com.educar.espaciotiempo {		import flash.display.Sprite;	import flash.events.Event;	import com.greensock.TimelineLite;	import com.greensock.easing.Back;	import flash.display.Shape;	import com.util.HTMLColors;	import com.greensock.TweenLite;	import com.educar.game.GameEvent;			public class EspacioOptions extends Sprite {				private var optionsContainer:Sprite;		private var numbersContainer:Sprite;		private var numbersMask:Shape;				public function EspacioOptions() {			this.addEventListener(Event.ADDED_TO_STAGE, init);		}				private function init(e:Event):void {						this.optionsContainer = new Sprite();			this.optionsContainer.x = 75;			this.optionsContainer.y = 110;			this.addChild( this.optionsContainer );						this.numbersContainer = new Sprite();			this.numbersContainer.x = 15;			this.numbersContainer.y = 110 + 3;			this.addChild( this.numbersContainer );						this.numbersMask = new Shape();			this.numbersMask.graphics.beginFill( HTMLColors.magenta, 0.5 );			this.numbersMask.graphics.drawRect( 22, 0, this.stage.stageWidth - 22, this.stage.stageHeight );			//this.addChild( this.numbersMask );			this.numbersContainer.mask = this.numbersMask;			this.numbersContainer.addEventListener( Event.CHANGE, checkNumber, false, 0, true );						var options:Array = this.getOptions();						//random array!			options.sort( function(a:*, b:*){					if (Math.random() < 0.5) return -1;					else return 1;				});						var nY:uint = 0;			var optionsAnim:TimelineLite = new TimelineLite();			for each( var opt:Object in options){				var child:Option = new Option( opt.text, opt.value );				child.y = nY;				nY += child.height + 5;				this.optionsContainer.addChild( child );				optionsAnim.from( child, 1, { y: 0, alpha: 0, ease: Back.easeOut }, '0' );			}						var numbersAnim:TimelineLite = new TimelineLite();			nY = 0;			for( var i:uint=1; i <= options.length; i++ ){				var number:OptionNumber = new OptionNumber( i );				number.y = nY;				number.savePos();				nY += number.height + 5;				numbersAnim.from( number, 1, { x: '-20', y: 0, alpha: 0, ease: Back.easeOut }, '0.7' );				this.numbersContainer.addChild( number );			}					}				public function orderByValue():void {			var ordered:Array = new Array();			for( var i:uint=0; i < this.optionsContainer.numChildren; i++ ){				var opt:Option = this.optionsContainer.getChildAt(i) as Option;				ordered[ opt.getValue()-1 ] = opt;			}						var nY:uint = 0;			var optionsAnim:TimelineLite = new TimelineLite();			for each( var child:Option in ordered){				optionsAnim.to( child, 1, { y: nY, ease: Back.easeOut }, '0' );				nY += child.height + 5;							}					}				private function checkNumber(e:Event):void {			var number:OptionNumber = e.target as OptionNumber;			for( var i:uint=0; i < this.optionsContainer.numChildren; i++ ){				var opt:Option = this.optionsContainer.getChildAt(i) as Option;				if( number.hitTestObject( opt ) ){					opt.adopt( number );					if( this.numbersContainer.numChildren == 0 ){						this.checkOptions();					}					return;				}			}			number.backToInit();		}				private function checkOptions():void {			for( var i:uint=0; i < this.optionsContainer.numChildren; i++ ){				var opt:Option = this.optionsContainer.getChildAt(i) as Option;				if( !opt.isCorrect() ){					this.dispatchEvent( new GameEvent( GameEvent.GAME_OVER ) );					return;				}			}			this.dispatchEvent( new GameEvent( GameEvent.GAME_WIN ) );		}				protected function getOptions():Array {			var options = new Array();			options.push( { value: 1, text: 'El zar se enferma' });			options.push( { value: 2, text: 'Ofrece la mitad de sus riquezas a quien pueda curarlo'});			options.push( { value: 3, text: 'Empiezan a llegar médicos, curanderos y magos del planeta entero'});			options.push( { value: 4, text: 'Un trovador anuncia la solución: “el zar se curará cuando vista la camisa de un hombre feliz”'});			options.push( { value: 5, text: 'Los enviados del zar tienen problemas para encontrar al dueño de la camisa'});			options.push( { value: 6, text: 'Finalmente aperece un hombre feliz'});			options.push( { value: 7, text: 'El hijo del zar manda a buscar su camisa'});			options.push( { value: 8, text: 'Fracasa el plan: el hombre feliz no tenía camisa'});			return options;		}			}	}